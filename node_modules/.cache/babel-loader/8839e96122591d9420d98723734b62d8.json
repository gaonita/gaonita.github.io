{"ast":null,"code":"var _jsxFileName = \"/Users/gaonyang/Dev/new-portfolio/gaonita.github.io/src/themed-button.js\";\nimport React from \"react\";\nimport { ThemeContext } from \"./theme-context\";\n\nconst ThemeTogglerButton = () => {\n  const {\n    theme,\n    toggleTheme\n  } = React.useContext(ThemeContext);\n  return /*#__PURE__*/React.createElement(ThemeContext.Consumer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }\n  }, (theme, toggleTheme) => {\n    console.log('THEME', theme);\n    return /*#__PURE__*/React.createElement(\"button\", {\n      onClick: toggleTheme,\n      style: {\n        backgroundColor: theme.background\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 21\n      }\n    }, \"Toggle theme\");\n  });\n};\n\nexport default ThemeTogglerButton;","map":{"version":3,"sources":["/Users/gaonyang/Dev/new-portfolio/gaonita.github.io/src/themed-button.js"],"names":["React","ThemeContext","ThemeTogglerButton","theme","toggleTheme","useContext","console","log","backgroundColor","background"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,YAAR,QAA2B,iBAA3B;;AAEA,MAAMC,kBAAkB,GAAG,MAAM;AAC7B,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAwBJ,KAAK,CAACK,UAAN,CAAiBJ,YAAjB,CAA9B;AACA,sBACI,oBAAC,YAAD,CAAc,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,CAACE,KAAD,EAAQC,WAAR,KAAwB;AACrBE,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBJ,KAArB;AACA,wBACI;AAAQ,MAAA,OAAO,EAAEC,WAAjB;AACQ,MAAA,KAAK,EAAE;AAACI,QAAAA,eAAe,EAAEL,KAAK,CAACM;AAAxB,OADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ;AAKH,GARL,CADJ;AAaH,CAfD;;AAiBA,eAAeP,kBAAf","sourcesContent":["import React from \"react\";\nimport {ThemeContext} from \"./theme-context\";\n\nconst ThemeTogglerButton = () => {\n    const { theme, toggleTheme} = React.useContext(ThemeContext)\n    return (\n        <ThemeContext.Consumer>\n            {(theme, toggleTheme) => {\n                console.log('THEME', theme)\n                return (\n                    <button onClick={toggleTheme}\n                            style={{backgroundColor: theme.background}}\n                    >Toggle theme</button>\n                )\n            }\n            }\n        </ThemeContext.Consumer>\n    )\n}\n\nexport default ThemeTogglerButton;"]},"metadata":{},"sourceType":"module"}